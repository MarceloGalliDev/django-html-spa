services:
  api: &api
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: guru_spa
    container_name: guru_spa
    volumes:
      - .:/app:z
      - ./staticfiles:/app/staticfiles
    # comentamos ap√≥s configurar nginx
    # ports:
    #   - "8000:8000"
    expose:
      - "8000"
    env_file:
      - ./.envs/.env.local
    depends_on:
      - postgres
      - redis
    command: /start
    # criado uma network separada
    networks:
      - guru_sp_nw

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    image: guru_postgres
    container_name: guru_postgres
    ports:
      - "5432:5432"
    volumes:
      - guru_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env.local
    networks:
        - guru_sp_nw

  redis:
    image: redis:7.2.5-alpine3.20
    command: redis-server --appendonly yes
    container_name: guru_redis
    volumes:
      - guru_redis_data:/data
    networks:
      - guru_sp_nw

  celeryworker:
    <<: *api
    image: guru_celeryworker
    container_name: guru_celeryworker
    command: /start-celeryworker

  flower:
    <<: *api
    image: guru_flower
    container_name: guru_flower
    ports:
      - "5555:5555"
    command: /start-flower
    

  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    restart: always
    container_name: guru_nginx
    ports:
      - "8080:80"
    volumes:
      - ./staticfiles:/app/staticfiles
      - logs_store:/var/log/nginx
    depends_on:
      - api
    networks:
      - guru_sp_nw

networks:
  guru_sp_nw:
    external: true

volumes:
  guru_postgres_data: {}
  logs_store: {}
  guru_redis_data: {}